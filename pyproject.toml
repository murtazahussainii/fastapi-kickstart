[tool.poetry]
name = "fastapi-template"
version = "0.1.0"
description = ""
authors = ["valon <valon.januzaj98@gmail.com>"]
readme = "README.md"
package-mode = false

[tool.poetry.dependencies]
python = "^3.12"
fastapi = "^0.112.2"
uvicorn = "^0.30.6"
pydantic-settings = "^2.4.0"
sqlalchemy = "^2.0.33"
alembic = "^1.13.2"
psycopg = {version = "^3.1.13", extras = ["binary"]}
celery = {extras = ["redis"], version = "^5.4.0"}
gunicorn = "^23.0.0"

[tool.poetry.group.dev.dependencies]
pytest = "^8.3.2"
pytest-cov = "^5.0.0"
httpx = "^0.27.2"
ruff = "^0.6.3"
pytest-sugar = "^1.0.0"
mypy = "^1.11.2"
pytest-celery = "^1.1.2"

[build-system]
requires = ["poetry-core"]
build-backend = "poetry.core.masonry.api"


[tool.mypy]
python_version = "3.12"
ignore_missing_imports = true
strict = true
exclude = ["venv", ".venv", "alembic"]

[tool.ruff]
target-version = "py312"
exclude = ["alembic"]

[tool.ruff.lint]
select = [
    "B",  # flake8-bugbear
    "W",  # pycodestyle warnings
    "I",  # isort
    "E",  # pycodestyle errors
    "C4",  # flake8-comprehensions
    "UP",  # pyupgrade
    "F",  # pyflakes
    "ARG001", # unused arguments in functions
]
ignore = [
    "E501",  # line too long
    "B008",  # do not perform function calls in argument defaults
    "W191",  # indentation contains tabs
    "B904",  # Allow raising exceptions without from e, for HTTPException
]

[tool.ruff.lint.pyupgrade]
keep-runtime-typing = true
